# -*- coding: utf-8 -*-
# @Author  : yingzhu
# @Time    : 2023/10/22 11:43
# @File    ：test11-loss.py
# @Function:

import numpy as np


# 知错的损失函数：用点乘衡量两组数据的相似程度
def precise_loss_function(predicted, real):  # 预测的 标答的
    # 预测概率：[[0.4,0.6],[0.3,0.7],[0.8,0.2]]  标答标签：[1,0,0]
    real_maxtrix = np.zeros((len(real), 2))  # 构造形状
    real_maxtrix[:, 1], real_maxtrix[:, 0] = real, 1 - real  # 填充
    # 用点乘衡量相似程度
    product = np.sum(predicted * real_maxtrix, axis=1)
    return 1 - product  # 损失函数越大准确性越差


predicted = np.array([[0.91202486, 0.08797514],
                      [0.91539237, 0.08460763],
                      [0.86425706, 0.13574294],
                      [0.91343251, 0.08656749],
                      [0.91590348, 0.08409652],
                      [0.91685808, 0.08314192],
                      [0.87685011, 0.12314989],
                      [0.91531129, 0.08468871],
                      [0.61268086, 0.38731914],
                      [0.90428019, 0.09571981],
                      [0.85898201, 0.14101799],
                      [0.91719511, 0.08280489],
                      [0.91490672, 0.08509328],
                      [0.90986069, 0.09013931],
                      [0.91607921, 0.08392079],
                      [0.91330785, 0.08669215],
                      [0.91464328, 0.08535672],
                      [0.91529745, 0.08470255],
                      [0.61268086, 0.38731914],
                      [0.89983567, 0.10016433]])
real = np.array([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1])
print(precise_loss_function(predicted, real))
